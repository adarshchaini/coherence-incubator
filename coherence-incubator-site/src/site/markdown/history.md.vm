Change History
--------------

The following sections outline Oracle Coherence Incubator changes in 
reverse chronological order.

<h3>Version ${project.version} @ ${timestamp}</h3>

<h4>Source and Documentation Contributors</h4>

*   Brian Oliver

<h4>coherence-incubator-site</h4>

*   [COHINC-119](http://java.net/jira/browse/COHINC-119): Modifed pom.xml
    to produce and deploy the documentation to github in the "deploy" phase.

<h4>coherence-messagingpattern</h4>

*   [COHINC-118](http://java.net/jira/browse/COHINC-118): Introduce the
    JMX-based diagnostics for Susbcriptions.  This includes the ability to
    display the internal state of a Subscription.

<h4>coherence-eventdistributionpattern</h4>

*   [COHINC-110](http://java.net/jira/browse/COHINC-110): Introduce the
    ability to control batch-size, inter batch-distribution-delay and
    restart-delay using JMX at runtime.

*   [COHINC-112](http://java.net/jira/browse/COHINC-112): Replace the
    "message out of order" log when using Coherence-based event distribution
    implementations with something more apppropriate.  This log only
    indicates that a recovery is occuring (nothing bad!), because it's
    redistributing messages to an event channel that previously
    failed for some reason.

*   [COHINC-115](http://java.net/jira/browse/COHINC-115): Refactored
    the "drain" functionality for Coherence-based event distribution
    implementations so that they use the configured batches and delays.


--------------------------------------------------------------------------------

<h3>Version 11.3.0 @ 2014-04-12 06:57</h3>

<h4>Source and Documentation Contributors</h4>

*   Brian Oliver

<h4>Global and Cross-Module Changes</h4>

*   [COHINC-81](http://java.net/jira/browse/COHINC-81): Upgraded to use Oracle Tools 1.2.2

*   [COHINC-86](http://java.net/jira/browse/COHINC-86): Upgraded to use Oracle Coherence 3.7.1.11

*   [COHINC-92](http://java.net/jira/browse/COHINC-92): Upgraded Maven Plugins.

<h4>coherence-incubator-all</h4>

*   [COHINC-90](http://java.net/jira/browse/COHINC-90): (re)Introduced coherence-incubator-all
    distribution that contains all of the Incubator projects, as a single artifact.

<h4>coherence-common</h4>

*   [COHINC-85](http://java.net/jira/browse/COHINC-85): Improved Annotation-based
    FiniteStateMachine Models to allow for @Transitions defined by super-classes.

*   [COHINC-87](http://java.net/jira/browse/COHINC-87): Introduced the ability to
    control whether a NonBlockingFiniteStateMachine autostarts (aka: transitions)
    to its initial state.

<h4>coherence-eventdistributionpattern</h4>

*   [COHINC-83](http://java.net/jira/browse/COHINC-83): Refactored
    AbstractEventChannelController internals to use a Non-Blocking Finite State
    Machine, instead of Java Synchronization and an ExecutorService.

    Apart from simplifying the implementation, this enhancement permits the use of
    "coalescing events", which can help reduce CPU when message subscriptions
    are updated, causing numerous events triggering extraneous distribution requests.

*   [COHINC-93](https://java.net/jira/browse/COHINC-93): Introduced new DELAYED
    state for the AbstractEventChannelController, together with a new "polling-delay"
    configuration for Event Channels.   This allows separate control of
    polling and inter-batch delays.

<h4>coherence-pushreplicationpattern-tests</h4>

*   [COHINC-11](http://java.net/jira/browse/COHINC-11):  Refactored
    Push Replication Functional Tests into their own module.


--------------------------------------------------------------------------------

<h3>Version: 11.2.0 @ 2013-11-21 19:20</h3>

<h4>Source and Documentation Contributors</h4>

*   Noah Arliss, Brian Oliver, Alexandru Serban

<h4>Global and Cross-Module Changes</h4>

*   Upgraded to use Oracle Tools 1.1.0

*   [COHINC-72](http://java.net/jira/browse/COHINC-72): Upgraded to use Oracle Coherence 3.7.1.10

*   [COHINC-74](https://java.net/jira/browse/COHINC-74): Upgraded to use Oracle Tools 1.1.0
    including a). refactoring the use of deprecated classes and b). removing the requirement
    for JMX enabled Coherence cluster members.

<h4>coherence-common</h4>

*   [COHINC-69](http://java.net/jira/browse/COHINC-69): Resolved issue
    where Coherence Xml Elements that produced custom instances would
    introduce a "use-scheme" attribute.   This should only occur for custom
    namespace elements.  This would cause some patterns, especially those
    using custom namespaces to fail to deploy on WLS 10.3.6.

<h4>coherence-eventdistributionpattern</h4>

*   [COHINC-71](http://java.net/jira/browse/COHINC-71): Introduce the
    ability to filter events prior to queuing them for distribution.

    Introduced EventChannelEventFilter interface that can be used to filter
    Events.  Implemented filtering for InterClusterEventChannels
    in the AbstractInterClusterEventChannelBuilder class.

*   [COHINC-71](http://java.net/jira/browse/COHINC-73): Resolves NullPointerException
    that may occur when attempting to use EntryEventOptimizingTransformers
    with Hub & Spoke or Centralized replication topologies.

<h4>coherence-pushreplicationpattern</h4>

*   [COHINC-65](http://java.net/jira/browse/COHINC-65): Resolved issue
    where attempting to remove non-existing or expired entries would not
    be replicated.

*   [COHINC-71](http://java.net/jira/browse/COHINC-71): Introduce the
    ability to filter events prior to queuing them for distribution.

    Refactored PublishingCacheStore to consult the EventChannelEventFilters
    for each configured EventChannel(Builder) priority to distributing
    an Event.

*   [COHINC-73](http://java.net/jira/browse/COHINC-73): Resolves NullPointerException
    that may occur when attempting to use EntryEventOptimizingTransformers
    with Hub & Spoke or Centralized replication topologies.


--------------------------------------------------------------------------------

<h3>Version 11.1.0 @ 2013-08-08 15:10</h3>

<h4>Source and Documentation Contributors</h4>

*   Noah Arliss, Jonathan Knight, Brian Oliver

<h4>Global and Cross-Module Changes</h4>

*   [COHINC-33](http://java.net/jira/browse/COHINC-33): Upgraded to use JUnit 4.10
    and Hamcrest 1.3

*   [COHINC-42](http://java.net/jira/browse/COHINC-42): Upgraded to use Oracle Tools 1.0.0

<h4>coherence-incubator-all</h4>

*   Removed this module as it wasn't published publically.

<h4>coherence-common</h4>

*   [COHINC-18](http://java.net/jira/browse/COHINC-18): Resolved incorrect
    PortableObject.writeExternal(...) implementation for the
    `StaticFactoryClassSchemeBasedParameterizedBuilder` class.

*   [COHINC-29](http://java.net/jira/browse/COHINC-29): Improved `LifecycleAwareEvent`
    information when using a `NonBlockingFiniteStateMachine`.

    This is a **breaking** change for the `LifecycleAwareEvent` interface.  However
    as we are only using this interface **only** with in an inner class of
    `NonBlockingFiniteStateMachine`, it **does not** break any public interfaces.

*   [COHINC-35](http://java.net/jira/browse/COHINC-35): Corrected use of printf
    in the `Runner` class that may prevent examples running on some platforms
    (like Windows).

*   [COHINC-38](http://java.net/jira/browse/COHINC-38): Enhanced ConfigurableCacheFactory
    Tests.

<h4>coherence-commandpattern</h4>

*   [COHINC-34](http://java.net/jira/browse/COHINC-34): Added missing pof-type
    declaration for the `CommandBatch` class.

*   [COHINC-48](http://java.net/jira/browse/COHINC-48): Refactored calls to
    CacheFactory.ensureCluster() that prevent redeployment in a Container.

<h4>coherence-messagingpattern</h4>

*   [COHINC-28](http://java.net/jira/browse/COHINC-28): Migrated Functional Test
    from internal Oracle Testing Framework.  These are contained in the new
    coherence-messagingpattern-tests module.

*   [COHINC-37](http://java.net/jira/browse/COHINC-37): Changed JMS Dependency
    to one that includes a jar artifact.

<h4>coherence-pushreplicationpattern</h4>

*   [COHINC-19](http://java.net/jira/browse/COHINC-19): Fixed Active-Active
    Push Replication Example - now correctly terminates.

*   [COHINC-30](http://java.net/jira/browse/COHINC-30): Removed hardcoded logging
    path from Push Replication tests.

<h4>coherence-pushreplicationpattern-web-example</h4>

*   [COHINC-40](http://java.net/jira/browse/COHINC-40): Introduced new Coherence*Web
    examples.


--------------------------------------------------------------------------------

<h3>Version 11.0.0 @ 2013-02-26 15:05</h3>

<h4>Source and Documentation Contributors</h4>

*   Noah Arliss, Jonathan Knight, Paul Mackin, Brian Oliver, Patrick Peralta

<h4>Global and Cross-Module Changes</h4>

*   Refactored all of the modules into a single source tree, with 
    separate folders for each module and their associated examples.
    
*   Restructured all of the modules follow standard [Apache Maven](http://maven.apache.org/) 
    conventions.
    
*   Completely re-wrote the build system to use [Apache Maven](http://maven.apache.org/)
    instead of Apache Ant.
    
*   Ratified and released all of the modules under a standard open source 
    license (CDDL).  This included changing all file headers to use standard
    CDDL headers.  Templates for these headers are available in the 
    "documents" folder.
    
*   Formalized the mechanism and process for accepting contributions.

*   Completely migrated the existing "closed" Atlassian Confluence-based 
    documentation to be part of the source tree, thus enabling contributions.
    This included re-writing and updating parts of the documentation for this
    release.  The documentation can be found in the `coherence-incubator-site` 
    module.
    
*   Rationalized all modules to use a single Coherence Incubator version number
    instead of individual version numbers.
       
*   Migrated the source repository to [GitHub](http://github.com).

*   Migrated the [Issue Tracking](http://java.net/jira/browse/COHINC) to
    [java.net](http://java.net).

*   Introduced "uber" jar generation support to produce the entire Oracle
    Coherence Incubator in a single jar.

*   Introduced (extracted) individual "example" modules for the patterns
    instead of using a single large example module.

*   Introduced a dependency on the Oracle Tools project for tests. Re-wrote all
    process-based tests to use this package.  This work was originally part of
    the Oracle Coherence Incubator but is now a separate project.  This work
    now includes signficiant contributions from the "Grid Man" project
    (developed by Jonathan Knight). 

*   Upgraded projects to use Oracle Coherence 3.7.1.7

*   Migrated binary distribution mechanism to use [maven.java.net](http://maven.java.net)
    instead of download links.

<h4>coherence-incubator-all</h4>

*   Introduced the ability to generate a coherence-incubator-all-x.y.z.jar
    that contains all of the Oracle Coherence Incubator compiled modules
    without third-party libraries and without Oracle Coherence itself.  This
    allows developers to use a single jar file in applications instead of 
    having to specify individual jars.

<h4>coherence-incubator-site (Documentation)</h4>

*   Introduced during the migration and re-write of the original Oracle
    Coherence Incubator 10 web-based documentation from http://oracle.coherence.com/.

<h4>coherence-common</h4>

*   Refactored the implementation of the Finite State Machines to correctly
    adopt and use standard UML terminology.

<h4>coherence-commandpattern</h4>

*   No Changes

<h4>coherence-commandpattern-examples</h4>

*   Introduced by extracting examples from Oracle Coherence Incubator 10.

<h4>coherence-functorpattern</h4>

*   No Changes

<h4>coherence-functorpattern-examples</h4>

*   Introduced by extracting examples from Oracle Coherence Incubator 10.

<h4>coherence-processingpattern</h4>

*   No Changes

<h4>coherence-processingpattern-examples</h4>

*   Introduced by extracting examples from Oracle Coherence Incubator 10.

<h4>coherence-messagingpattern</h4>

*   Resolved potential Message memory leak 
    (messages not being removed from the messages cache after being acknowledged)

<h4>coherence-eventdistributionpattern</h4>

*   Resolved potential and unnecessary hi-cpu usage when using 
    Coherence-based Messaging distributors.

*   Refactored tests to use Oracle Tools.

*   Introduced the new `ParallelLocalCacheEventChannel` providing the ability
    to update local caches in parallel across a cluster.

<h4>coherence-pushreplicationpattern</h4>

*   Refactored tests to use Oracle Tools.

*   Resolved issue were calling NamedCache.getAll(...) on a cache that is being
    used for Push Replication would throw an UnsupportedOperationException.

*   Added new tests for the new `ParallelLocalCacheEventChannel`.

<h4>coherence-pushreplicationpattern-examples</h4>

*   Introduced by extracting examples from Oracle Coherence Incubator 10.
